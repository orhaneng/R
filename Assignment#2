Assignment#2
Omer Orhan
8 Ekim 2018
#Question1:Write a program to find the outliers using Box and Whiskerâ€™s criterion discussed in the class


BoxAndwhisker<-function(x){

  x1 <- (summary(x)[2] - (1.5 * IQR(x)) )
  x3 <- (summary(x)[5] + (1.5 * IQR(x)) )
  return(subset(x, x <= x1|x >= x3))
}
x<-c(0.5,3,5,8,10,100,180)
print(BoxAndwhisker(x))
## [1] 180
#QUESTION2:Make two vectors: X<-c(1,2,5,10,12) Y<-c(2,5,1,0,12)
X<-c(1,2,5,10,12)
Y<-c(2,5,1,0,12)
#a.Find the values that are contained in both X and Y
intersect(X,Y)
## [1]  1  2  5 12
#b.Find values that are in x but not in y and (vice versa)
setdiff(X,Y)
## [1] 10
setdiff(Y,X)
## [1] 0
#c.Construct a vector that contains all values contained in either X or Y,and compare this vector to c(X,Y)
 a <- union(X,Y)
 a
## [1]  1  2  5 10 12  0
 a %in% c(X,Y) 
## [1] TRUE TRUE TRUE TRUE TRUE TRUE
#Load USArrests data set.
#Question3:Which states has most and least assault, murder, and rape arrests.
x <- USArrests
#max Murder;
row.names(x)[which.max(x$Murder)]
## [1] "Georgia"
#max Assault;
row.names(x)[which.max(x$Assault)]
## [1] "North Carolina"
#max Rape
row.names(x)[which.max(x$Rape)]
## [1] "Nevada"
#min Murder
row.names(x)[which.min(x$Murder)]
## [1] "North Dakota"
#min Assault
row.names(x)[which.min(x$Assault)]
## [1] "North Dakota"
#min Rape
row.names(x)[which.min(x$Rape)]
## [1] "North Dakota"
#Question4:Which states are in the bottom 25% of murder and in the top 25% of the murder.
#bottom 25% of murder
bottomQuartileMurderRate <- quantile(USArrests$Murder)[2]
subset(USArrests, Murder < bottomQuartileMurderRate, select= c(Murder))
##               Murder
## Connecticut      3.3
## Idaho            2.6
## Iowa             2.2
## Maine            2.1
## Minnesota        2.7
## New Hampshire    2.1
## North Dakota     0.8
## Rhode Island     3.4
## South Dakota     3.8
## Utah             3.2
## Vermont          2.2
## Washington       4.0
## Wisconsin        2.6
#top 25% of murder
topQuartileMurderRate <- quantile(USArrests$Murder)[4]
subset(USArrests, Murder > topQuartileMurderRate, select= c( Murder))
##                Murder
## Alabama          13.2
## Florida          15.4
## Georgia          17.4
## Louisiana        15.4
## Maryland         11.3
## Michigan         12.1
## Mississippi      16.1
## Nevada           12.2
## New Mexico       11.4
## North Carolina   13.0
## South Carolina   14.4
## Tennessee        13.2
## Texas            12.7
#QUESTION5 
# The following function calculates the mean and standard deviation of a numeric vector
# Fn1<-function(x){
# Mean1<- mena(x)
# Sd1<-sd(x)
# return(mean = mean1, sd = sd1)
# }
# Modify the function so that: 

#Fn1<-function(x){
#  Mean1<- mean(x)
#  Sd1<-sd(x)
#  return(output<-list("sd:"=Sd1,"mean="=Mean1))
#}
#x <- c(1,3,6,8,9)
#print(Fn1(x))

#   (a) the default is to use rnorm to generate 30 random normal numbers, and return the standard deviation, 
Fn1<-function(X=rnorm(30)){
  sd(X)
  return(sd(X))
}
print(Fn1())
## [1] 0.6701369
# (b) if there are missing values, the mean and standard deviation are calculated for the remaining values.

Fn1<-function(x){
  if(any(is.na(x))){
    x <- na.omit(x)
  }
  Mean1<- mean(x)
  Sd1<-sd(x)
  return(output<-list("sd:"=Sd1,"mean="=Mean1))
}
x <- c(1,NA,6,8,9)
print(Fn1(x))
## $`sd:`
## [1] 3.559026
## 
## $`mean=`
## [1] 6
